upstream ui_server {
  server web-ui:5000 fail_timeout=0;
}
upstream api_server {
  server web-api:5000 fail_timeout=0;
}

# HTTP server
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name _;  # Accept any hostname

  # Remove any HSTS headers
  add_header Strict-Transport-Security "" always;

  # Request ID tracing
  add_header X-Request-ID $request_id;

  # The request body is sent to the proxied server immediately as it is received
  proxy_request_buffering off;
  # Sets the HTTP protocol v1.1 for proxying in order to not use the buffer
  # in case of chunked transfer encoding
  proxy_http_version 1.1;

  # Proxying to the application server
  ## UI server
  location / {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    
    uwsgi_pass ui_server;
    include uwsgi_params;
    uwsgi_buffering off;
    uwsgi_request_buffering off;
    uwsgi_param Host $host;
    uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
    uwsgi_param X-Forwarded-Proto http;  # Force HTTP
    # Pass request id to the ui server
    uwsgi_param X-Request-ID $request_id;
    # X-Session-ID / X-User-ID is read by nginx and included in the logs,
    # however we don't want to expose them to clients so we are hiding them.
    uwsgi_hide_header X-Session-ID;
    uwsgi_hide_header X-User-ID;
    # Max upload size (except for files) is set to 100mb as default.
    client_max_body_size 100m;
  }
  ## Most API
  location /api {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    
    uwsgi_pass api_server;
    include uwsgi_params;
    uwsgi_buffering off;
    uwsgi_request_buffering off;
    uwsgi_param Host $host;
    uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
    uwsgi_param X-Forwarded-Proto http;  # Force HTTP
    # Pass request id to the api server
    uwsgi_param X-Request-ID $request_id;
    # X-Session-ID / X-User-ID is read by nginx and included in the logs,
    # however we don't want to expose them to clients so we are hiding them.
    uwsgi_hide_header X-Session-ID;
    uwsgi_hide_header X-User-ID;
    # Max upload size (except for files) is set to 100mb as default.
    client_max_body_size 100m;
  }
  ## API files
  location ~ /api/records/.+/draft/files/.+/content {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    
    gzip off;
    uwsgi_pass api_server;
    include uwsgi_params;
    uwsgi_buffering off;
    uwsgi_request_buffering off;
    uwsgi_param Host $host;
    uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
    uwsgi_param X-Forwarded-Proto http;  # Force HTTP
    # Pass request id to api server
    uwsgi_param X-Request-ID $request_id;
    # X-Session-ID / X-User-ID is read by nginx and included in the logs,
    # however we don't want to expose them to clients so we are hiding them.
    uwsgi_hide_header X-Session-ID;
    uwsgi_hide_header X-User-ID;
    # Max upload size for files is set to 50GB (configure as needed).
    client_max_body_size 50G;
  }
  # Static content is served directly by nginx and not the application server.
  location /static {
    alias /opt/invenio/var/instance/static;
    autoindex off;
  }
  # Robots.txt file is served by nginx.
  location /robots.txt {
    alias /opt/invenio/var/instance/static/robots.txt;
    autoindex off;
  }
}